{% extends 'base.html.twig' %}

{% block title %}Échéancier de paiement{% endblock %}

{% block body %}
       <div class="container-fluid">
            <div style = "margin-left: auto ; margin-right: auto ; max-width : 900px;">
            {% if diff!=0 %}
                <p>Erreur votre échéancier de paiement ne corrspond pas au total de la facture, il y a une erreur de {{ -diff }}€</p>
            {% endif %}

            <p class="display-4 no-wrap text-center mt-3">Définissez votre échéancier de paiement </p>
            <h3 class="text-center mt-3">Pour la facture Fact-{{ invoice.code }} de {{ total }}€</h3>
            <div class="form-control form-control-lg mx-auto corps text-center">
                {{ form_start(form) }}
                <div class="mx-auto mt-1 mb-5">
                    <h2  class="my-5">Échéancier de paiement </h2>

                    {% for paymentdeadline in form.paymentdeadlines %}
                        <div class="paymentdeadline my-5">
                            <h3  class="my-3">Échéance N°{{ loop.index }}</h3>

                            <div class="expectedAmount">
                                {{ form_label(paymentdeadline.expectedAmount, 'Montant ', {'label_attr': {'class': 'foo'}}) }}
                                {{ form_errors(paymentdeadline.expectedAmount) }}
                                {{ form_widget(paymentdeadline.expectedAmount)}}
                                {{ form_help(paymentdeadline.expectedAmount) }}
                            </div>

                            <div class="expectedPaymentDate">
                                {{ form_label(paymentdeadline.expectedPaymentDate, 'Date de paiment ', {'label_attr': {'class': 'foo'}}) }}
                                {{ form_errors(paymentdeadline.expectedPaymentDate) }}
                                {{ form_widget(paymentdeadline.expectedPaymentDate) }}
                                {{ form_help(paymentdeadline.expectedPaymentDate) }}
                            </div>


                            <div class="expectedMeans">
                                {{ form_label(paymentdeadline.expectedMeans, 'Moyen de paiment ', {'label_attr': {'class': 'foo'}}) }}
                                {{ form_errors(paymentdeadline.expectedMeans) }}
                                {{ form_widget(paymentdeadline.expectedMeans) }}
                                {{ form_help(paymentdeadline.expectedMeans) }}
                            </div>
                        </div>
                    {% endfor %}

                    <div class="paymentdeadlines my-5" data-prototype="{{ form_widget(form.paymentdeadlines.vars.prototype)|e('html_attr') }}">
                    </div>

                    <button type="button" class="btn btn-success add_item_link" data-collection-holder-class="paymentdeadlines">Ajouter une échéance</button>

                    <br>
                    <button class="btn btn-success mt-3 mb-3">{{ button_label|default('Valider ') }}<i class = "fa text-light fa-save me-2"></i></button>
                </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script>
        jQuery(document).ready(function() {

            // Get the ul that holds the collection of tags
            var $paymentdeadlinesCollectionHolder = $('ul.paymentdeadlines');
            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $paymentdeadlinesCollectionHolder.data('index', $paymentdeadlinesCollectionHolder.find('input').length);

            $('body').on('click', '.add_item_link', function(e) {
                var $collectionHolderClass = $(e.currentTarget).data('collectionHolderClass');
                // add a new tag form (see next code block)
                addFormToCollection($collectionHolderClass);
            })
        });

        function addFormToCollection($collectionHolderClass) {
            // Get the ul that holds the collection of tags
            var $collectionHolder = $('.' + $collectionHolderClass);

            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newLabel = $("<h3  class='my-3'>Échéance provisoire</h3>");
            $collectionHolder.append($newLabel)
            var $newForm = $('<div></div>').append(newForm);
            // Add the new form at the end of the list
            $collectionHolder.append($newForm)
            addTagFormDeleteLink($newForm,$newLabel);
        }

        function addTagFormDeleteLink($newForm,$newLabel) {
            var $removeFormButton = $('<button type="button" class="btn btn-danger">Retirer cette échéance</button>');
            $newForm.append($removeFormButton);

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                $newForm.remove();
                $newLabel.remove();
            });
        }
    </script>
{% endblock %}


